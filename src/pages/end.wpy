<style lang='css'>
  page {
    height: 100%
  }
  .mask {
    position:fixed;
    background:rgba(0,0,0,0.9);
    height:100%;
    width:100%;
    z-index:9999;
    user-select:none;
  }

  .header-wrap {
    position:relative;
    height:80px;
    width:100%;
    background-color:rgba(42, 33, 10, 0.4);
    color: #fff;
    font-size:14px;
    padding-top:10px;
  }
  .userinfo-avatar {
    position: absolute;
    top: 12px;
    left: 26px;
    width:44px;
    height:44px;
  }
  .pr {
    position:relative;
  }
  .nickname {
    position:absolute;
    top:12px;
    left:86px;
  }
  .desc {
    position:absolute;
    top:38px;
    left:86px;
  }

  .tips-wrap {
    position: relative;
    width: 100%;
    height:190px;
  }
  .tips-wrap-active {
    background-color:rgba(42, 33, 10, 0.4);
  }
  .tips-icon {
    position:absolute;
    bottom:35px;
    width:20px;
    height:20px;
    z-index: 501;
  }
  .editor-active {
    right: 35%;
  }
  .back-active {
    left: 35%;
  }
  .tips-text {
    height:80px;
    display:block;
    background:rgba(0,0,0,0.3);
    margin:0 5%;
    width:90%;
    position:absolute;
    bottom:85px;
    font-size:16px;
    color:#fff;
    padding: 2%;
    box-sizing: border-box;
    z-index: 500;
  }
  .bg-hide {
    background:transparent!important;
  }
  .tips-btn-pannel {
    position: absolute;
    bottom: 12px;
    right: 5px;
    padding: 10px;
    box-sizing: border-box;
  }
  .tips-btn {
    width: 35px;
    height: 20px;
    line-height: 20px;
    text-align: center;
    border-radius: 3px;
    font-size: 0.6rem;
    color: #fff;
    background: #B0976E;
  }

  .text-btn {
    position:absolute;
    bottom: 30px;
    font-size: 0.8rem;
    color:#eee;
    background:#B0976E;
    padding: 5px 15px;
    border-radius:3px;
    z-index: 501;
  }

  .share-wrap {
    display: flex;
    flex-direction: column;
    position:fixed;
    background:#fff;
    width:100%;
    height:140px;
    bottom:0;
    z-index: 10000
  }
  .share-image {
    width:40px;
    height:40px;
  }
  .share-line {
    border-bottom:1px solid #ccc;
    margin-top:10px;
    z-index:1000;
    width:70%;
    height:1px;
    margin-left:15%;
  }
  .share-title {
    text-align:center;
    font-size:0.6rem;
    padding:5px;
    color:#ccc;
    z-index:10000;
    background:#fff;
    text-align: center;
  }
  .share-btn-wrap {
    display: flex;
    flex:1;
    justify-content:center;
    align-items:center;
  }
  .share-btn {
    background:#fff;
    border:2px solid #fff;
    font-size:0.6rem;
    color:#ccc;
    line-height:1.8;
  }
  .share-btn::after {
    border: 0;
  }

  .imagex {
    position: fixed;
    width:80%;
    top:100rpx;
    z-index: 10000;
    min-height:75%;
  }
  .close {
    position:fixed;
    bottom:80rpx;
    left:35%;
    z-index: 10000;
  }
  .download {
    position:fixed;
    bottom:80rpx;
    right:35%;
    z-index: 10000;
  }
  .imagex-i {
    width: 32px;
    height: 32px;
  }
  .zIndex10 {
    z-index: 10;
  }
</style>

<template>
  <view class="container ex" style="background-size:cover; background-image: url({{backgroundImage}})" @tap="onTapStop">
    <image class="imagex {{isShowImage ? '': 'hide'}}" @tap.stop="onStop" mode="aspectFit" src="{{ picUrl }}"/>
    <view class="mask {{isShowImage ? '' : 'hide'}}" @tap.stop="onStop"></view>
    <view class="close" @tap.stop="onHideImage">
      <image class="{{isShowImage ? 'imagex-i' : 'hide'}}" src="/images/close.png"></image>
    </view>
    <view class="download" @tap.stop="onSave">
      <image class="{{isShowImage ? 'imagex-i' : 'hide'}}" src="/images/download.png"></image>
    </view>

    <view class="header-wrap">
      <view class="pr">
        <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
        <view class="nickname">{{userInfo.nickName}}</view>
        <view class="desc {{exTime === 0 ? 'hide' : ''}}">{{extype}} {{exTime}} 分钟，连续第{{continuousNum}}天</view>
        <view class="desc {{exTime === 0 ? '' : 'hide'}}">练习不足1分钟，将不计入成绩统计。</view>
      </view>
      <view class="tips-btn-pannel {{exTime === 0 ? 'hide' : ''}}" @tap.stop="onShowShare">
        <view class="tips-btn">
          打卡
        </view>
      </view>
    </view>

    <!-- 小标签 -->
    <view class="pr tips-wrap {{isShowTips || tips ? 'tips-wrap-active' : ''}}">
      <image class="tips-icon {{(tips && !isShowTips) || !isShowTips ? 'editor-active' : 'hide'}}" src="/images/editor.png" @tap.stop="onShowEditor"></image>
      <image class="tips-icon {{isShowTips || (!isShowTips && tips) ? 'hide' : 'editor-active'}}" src="/images/editor-default.png" @tap.stop="onShowEditor"></image>
      <image class="tips-icon {{isShowTips ? 'back-active hide' : 'back-active back'}}" src="/images/back.png" @tap="onBackHome"></image>
      <view class="tips-wrap {{isShowImage ? 'hide' : ''}}">
        <textarea class="tips-text {{isShowTips || tips ? '' : 'hide'}} {{tips && !isShowTips ? 'bg-hide' : ''}}"
                  adjust-position="true"
                  cursor-spacing="80"
                  maxlength="1000"
                  bindinput="onEndText" @tap.stop="onStop" value="{{tips}}" placeholder="记录练习状态和疑问，以便得到别人的指导，及回顾总结"></textarea>
        <view class="tips-text {{!isShowTips && tips ? '' : 'hide'}} {{tips && !isShowTips ? 'bg-hide' : ''}}" style="z-index: 510"></view>
        <view class="text-btn {{isShowTips ? '' : 'hide'}}" style="right: 5%;" @tap.stop="onSetOk">提交</view>
        <view class="text-btn {{isShowTips ? '' : 'hide'}}" style="right: 35%;" @tap="onCancel">取消</view>
      </view>
    </view>

    <!-- 打卡 -->
    <view class="share-wrap {{isShowShare ? '' : 'hide'}}">
      <view>
        <view class="share-line"></view>
        <view class="share-title">分享</view>
      </view>
      <view class="share-btn-wrap">
        <button class="share-btn" @tap="onShowImage">
          <image class="share-image" src="/images/firend.png"></image>
          <view>朋友圈</view>
        </button>
        <button class="share-btn" open-type="share">
          <image class="share-image" src="/images/weixin.png"></image>
          <view>微信</view>
        </button>
        <button class="share-btn" bindtap="textMark">
          <image class="share-image" src="/images/text.png"></image>
          <view>文字信息打卡</view>
        </button>
      </view>
    </view>
  </view>
</template>

<script>
  import moment from 'moment'
  import wepy from 'wepy'
  import {ajax} from '../components/ajax.js'
  import formIds from "../mixins/formIds"

  const getUserId = function() {
    let params = {}

    ajax({
      ins: this,
      url: '/brief/user/info',
      params,
      success: (d) => {
        this.userId = d.id
      }
    })
  }

  const onTapStop = function() {
    this.isPause = true
    clearInterval(this.timer)
    this.timer = ''
    this.isShowTips = false
    this.$apply()
  }

  export default class End extends wepy.page {
    config = {
      disableScroll: true,
      navigationBarTitleText: '练习'
    }
    components = {
    }
    data = {
      userInfo: {},
      userId: '',
      isShowTips: false,
      isShowShare: false,
      tips: '',
      tipsCache: '',
      backgroundImage: '',
      extype: '',
      exTime: 0,
      continuousNum: 1,
      isShowImage: false,
      picUrl: '',
      isCover: false
    }
    mixins = [ formIds ]
    onLoad() {
      getUserId.call(this)

      this.backgroundImage = this.$parent.globalData.endImage;
      this.resPerfix = this.$parent.globalData.resPerfix;
      this.extype = this.$parent.globalData['setExType'] || ''
      this.exTime = Math.abs(this.$parent.globalData['exTime'])
      this.$parent.getUserInfo((userInfo) => {
        if (userInfo) {
          this.userInfo = userInfo
        }

        this.$apply()
      })
      const submitData = this.$parent.globalData.submitData
      submitData.musicId = submitData.musicId || 0
      const trainMethodIds = submitData.trainMethodIds || ''
      submitData.trainMethodIds = trainMethodIds.split(' ').join(',') || ''

      ajax({
        ins: this,
        url: '/train/submit',
        params: submitData,
        method: 'POST',
        success: (d) => {
          this.$parent.globalData.curDataId = d

          const etoaArr = wx.getStorageSync('exTimeOfflineArray') || []
          if (etoaArr && etoaArr.length) {
            const index = etoaArr.findIndex(e => e.timeSet == submitData.timeSet && e.trainMethodIds == submitData.trainMethodIds)
            if (index >= 0) {
              etoaArr.splice(index, 0)

              wx.setStorage({
                key: 'exTimeOfflineArray',
                data: etoaArr,
                success: function(res){
                  console.log('本地存储 exTimeOfflineArray 成功')
                }
              })
            }
          }
        },
        fail: () => {
          console.log('提交失败~~')
        }
      })

      ajax({
        ins: this,
        url: '/train/summary',
        params: {},
        success: (d) => {
          d.trainInfo = d.trainInfo || {}
          const strLastTime = d.trainInfo.strLastTime

          var yesterday = new Date()
          yesterday.setTime(yesterday.getTime() - 24 * 60 * 60 * 1000)

          if (strLastTime == moment(yesterday).format('YYYY-MM-DD')) {
            d.trainInfo.continuousNum += 1
          } else if (strLastTime != moment(new Date).format('YYYY-MM-DD')) {
            d.trainInfo.continuousNum = 1
          }

          this.continuousNum = d.trainInfo.continuousNum || 1
          this.exTimeX = d.trainInfo.todayDuration
          this.$apply()
        }
      })
    }
    methods = {
      onTapStop() {
        this.isShowShare = false

        if (!this.isShowTips) return
        onTapStop.call(this)

        const tips = this.tips
        if (tips) {
          this.tipsCache = tips
        }
        this.tips = ''
      },
      onShowEditor(e) {
        this.tips = this.tips || this.tipsCache || ''
        this.isShowTips = true
      },
      onHideEditor(e) {
        this.isShowTips = false
      },
      onBackHome() {
        this.$switch('./setex')
      },
      onEndText(e) {
        this.tips = e.detail.value
      },
      onSetOk() {
        const self = this
        if(!self.tips) return
        if (self.tips.length > 500) {
          wx.showToast({
            title: '最多500字',
            icon: 'error',
            duration: 2000,
            mask: true
          })
          return
        }

        setTimeout(() => {
          ajax({
            ins: self,
            url: '/train/experience',
            params: {
              trainId: self.$parent.globalData.curDataId,
              content: self.tips,
            },
            method: 'POST',
            success: (d) => {
              console.log('于' + d + '提交')
              onTapStop.call(self)
            }
          })
        }, 500)
      },
      onCancel() {
      },
      onChangeEditor() {
        this.isCover = false
      },
      onStop() {},
      onShowShare() {
        // 获取分享地址
        ajax({
          ins: this,
          url: '/train/punch/image',
          params: {},
          success: (d) => {
            this.shareUrl = d
            this.isShowShare = true
            this.$apply()
          },
          fail: () => {
            wx.showToast({
              title: '获取分享图片失败',
              icon: 'error',
              duration: 2000,
              mask:true
            })
          }
        })
      },
      onShareAppMessage (res) {
        let path = 'pages/ex-briefing?_f=1&userId=' + this.userId

        return {
          title: (this.userInfo.nickName || '') + (this.extype || '') + this.exTime + '分钟，连续第' + this.continuousNum + '天',
          path,
          imageUrl: this.resPerfix + this.shareUrl + '?' + Date.now(),
          complete: (e) => {
            console.log(e)
          }
        }
      },
      onHideImage() {
        this.isShowImage = false
      },
      onShowImage() {
        ajax({
          ins: this,
          url: '/train/poster/image',
          params: {},
          success: (d) => {
            this.picUrl = this.$parent.globalData.resPerfix + d
            this.isShowImage = true
            this.$apply()
          }
        })
      },
      onSave() {
        //文件下载
        wx.downloadFile({
          url: this.picUrl,
          success: (res) => {
            wx.saveImageToPhotosAlbum({
              filePath: res.tempFilePath,
              success: (data) => {
                wx.showToast({
                  title: '保存成功',
                  duration: 2000,
                  mask:true
                })
                this.isShowImage = false
                this.$apply()
                console.log(data);
              },
              fail: (err) => {
                wx.showToast({
                  title: err,
                  icon: 'error',
                  duration: 2000,
                  mask:true
                })
                this.isShowImage = false
                this.$apply()

                if (err.errMsg === "saveImageToPhotosAlbum:fail auth deny") {
                  wx.openSetting({
                    success(settingdata) {
                      console.log(settingdata)
                      if (settingdata.authSetting['scope.writePhotosAlbum']) {
                        console.log('获取权限成功，给出再次点击图片保存到相册的提示。')
                      }else {
                        console.log('获取权限失败，给出不给权限就无法正常使用的提示')
                      }
                    }
                  })
                }
              }
            })
          }
        })
      },
      // 文字信息打卡
      textMark() {
        this.$parent.globalData.stateText = this.tips
        this.$navigate('./ex-text-mark');
      }
    }
  }
</script>
